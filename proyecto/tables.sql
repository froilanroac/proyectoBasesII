DROP TABLE HIS_MANTENIMIENTOS;
DROP TABLE CRUCEROS;
DROP TABLE SERVICIOS; 
DROP TABLE VENTAS_COMPETIDORES;
DROP TABLE COMPETIDORES;
DROP TABLE MANTENIMIENTOS;

CREATE OR REPLACE TYPE DATOS_TDA AS OBJECT(
FECHA_DESDE date,
FECHA_HASTA date,
PRECIO_DIA number(10,2),
PRECIO_TO number(10,2),
STATIC FUNCTION VALIDACION_FECHA (fecha_inicio date, fecha_fin date) RETURN date,
STATIC FUNCTION VALIDACION_PRECIO (precio NUMBER) RETURN number,
STATIC FUNCTION PRECIO_TOTAL(precio number,d1 DATE,d2 DATE) RETURN NUMBER
);
/
CREATE OR REPLACE TYPE BODY DATOS_TDA AS

STATIC FUNCTION VALIDACION_FECHA(fecha_inicio date, fecha_fin date) RETURN date
IS
BEGIN
IF fecha_fin >= fecha_inicio THEN
RETURN fecha_inicio;
ELSE
RAISE_APPLICATION_ERROR(-20001, 'Error: la fecha de fin no puede ser antes que la de inicio.');
END IF;
END;

STATIC FUNCTION VALIDACION_PRECIO(PRECIO NUMBER) RETURN NUMBER
IS
BEGIN
IF PRECIO>=0 THEN
RETURN PRECIO;
ELSE
RAISE_APPLICATION_ERROR(-20001, 'Error: Ingrese un precio valido.');
END IF;
END;

STATIC FUNCTION PRECIO_TOTAL(precio number,d1 DATE,d2 DATE) RETURN NUMBER
IS
BEGIN
IF ((d2>=d1) AND (PRECIO >= 0)) THEN
return (d2-d1) * precio;
ELSE
RAISE_APPLICATION_ERROR(-20001,'Error: Verifique el precio o las fechas.');
END IF;
END;

END;
/
CREATE OR REPLACE TYPE PRECIO_TDA AS OBJECT(
MONTO number(10,2),
STATIC FUNCTION VALIDACION_MONTO(MONTO NUMBER) RETURN NUMBER
);
/

CREATE OR REPLACE TYPE BODY PRECIO_TDA AS

STATIC FUNCTION VALIDACION_MONTO(MONTO NUMBER) RETURN NUMBER
IS
BEGIN
IF MONTO >= 0  THEN
RETURN MONTO;
ELSE
RAISE_APPLICATION_ERROR(-20001, 'Error: El precio no puede ser negativo');
END IF;
END;

END;
/
CREATE TABLE MANTENIMIENTOS (
    NUMERO NUMBER PRIMARY KEY,
    PRECIO PRECIO_TDA,
    DESCRIPCION VARCHAR(50)
);

CREATE TABLE SERVICIOS (
    ID NUMBER PRIMARY KEY,
    CATEGORIA VARCHAR(50)
);

CREATE TABLE CRUCEROS (
    ID NUMBER PRIMARY KEY,
    datos DATOS_TDA,
    FOTO BLOB,
    FK_SERVICIO NUMBER,
    CONSTRAINT FK_SERVICIO FOREIGN KEY(FK_SERVICIO) REFERENCES SERVICIOS(ID)
);

CREATE TABLE HIS_MANTENIMIENTOS (
    FECHA_MANTENIMIENTO DATE,
    FECHA_PROX_MANTENIMIENTO DATE,
    FK_CRUCERO NUMBER,
    FK_MANTENIMIENTO NUMBER,
    CONSTRAINT PK_HISTORICOS_MANTENIMIENTO PRIMARY KEY(FECHA_MANTENIMIENTO,FK_CRUCERO,FK_MANTENIMIENTO),
    CONSTRAINT FK_CRUCERO FOREIGN KEY(FK_CRUCERO) REFERENCES CRUCEROS(ID),
    CONSTRAINT FK_MANTENIMIENTO FOREIGN KEY(FK_MANTENIMIENTO) REFERENCES MANTENIMIENTOS(NUMERO)
);

CREATE TABLE COMPETIDORES (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    FOTO BLOB
);

CREATE TABLE VENTAS_COMPETIDORES (
    FECHA_CREACION DATE,
    CANTIDAD_VENTAS NUMBER,
    FK_COMPETIDOR NUMBER,
    CONSTRAINT PK_VENTA_COMPETIDOR PRIMARY KEY (FECHA_CREACION,FK_COMPETIDOR),
    CONSTRAINT FK_COMPETIDOR_VENTA_COMPETIDORES FOREIGN KEY(FK_COMPETIDOR) REFERENCES COMPETIDORES(ID)
);
